"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
process.env.TITO_TOKEN_RF = "abcd1234";
const validate_tito_payload_1 = __importDefault(require("./validate-tito-payload"));
const crypto_1 = __importDefault(require("crypto"));
const reply = {
    badRequest: jest.fn(),
    notAcceptable: jest.fn()
};
const payloadMissingEvent = { foo: "bar" };
const payloadEvent = { foo: "bar", event: { slug: 'reinforce2020' } };
describe('tito payload validation', () => {
    beforeEach(() => {
        reply.badRequest.mockClear();
        reply.notAcceptable.mockClear();
    });
    test('validate missing event payload', () => {
        validate_tito_payload_1.default({ headers: { 'tito-signature': "foo" }, body: payloadMissingEvent }, reply);
        expect(reply.badRequest).toHaveBeenCalledTimes(1);
    });
    test('validate event payload with hash mismatch', () => {
        validate_tito_payload_1.default({
            headers: { 'tito-signature': "foo" },
            body: payloadEvent,
            rawBody: JSON.stringify(payloadEvent)
        }, reply);
        expect(reply.notAcceptable).toHaveBeenCalledTimes(1);
    });
    test('validate event payload with proper hash', () => {
        const hmac = crypto_1.default
            .createHmac('sha256', process.env.TITO_TOKEN_RF)
            .update(JSON.stringify(payloadEvent))
            .digest('base64');
        validate_tito_payload_1.default({
            headers: { 'tito-signature': hmac },
            body: payloadEvent,
            rawBody: JSON.stringify(payloadEvent)
        }, reply);
        expect(reply.badRequest).toHaveBeenCalledTimes(0);
        expect(reply.notAcceptable).toHaveBeenCalledTimes(0);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGUtdGl0by1wYXlsb2FkLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaG9va3MvdmFsaWRhdGUtdGl0by1wYXlsb2FkLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsR0FBRyxVQUFVLENBQUE7QUFFdEMsb0ZBQXlEO0FBQ3pELG9EQUE0QjtBQUU1QixNQUFNLEtBQUssR0FBRztJQUNaLFVBQVUsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFO0lBQ3JCLGFBQWEsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFO0NBQ3pCLENBQUE7QUFFRCxNQUFNLG1CQUFtQixHQUFHLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxDQUFBO0FBQzFDLE1BQU0sWUFBWSxHQUFHLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLEVBQUMsQ0FBQTtBQUVwRSxRQUFRLENBQUMseUJBQXlCLEVBQUUsR0FBRyxFQUFFO0lBRXZDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDZCxLQUFLLENBQUMsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFBO1FBQzVCLEtBQUssQ0FBQyxhQUFhLENBQUMsU0FBUyxFQUFFLENBQUE7SUFDakMsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLENBQUMsZ0NBQWdDLEVBQUUsR0FBRyxFQUFFO1FBQzFDLCtCQUFtQixDQUFDLEVBQUMsT0FBTyxFQUFFLEVBQUMsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUE7UUFFN0YsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwRCxDQUFDLENBQUMsQ0FBQztJQUVILElBQUksQ0FBQywyQ0FBMkMsRUFBRSxHQUFHLEVBQUU7UUFDckQsK0JBQW1CLENBQUM7WUFDbEIsT0FBTyxFQUFFLEVBQUMsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFO1lBQ25DLElBQUksRUFBRSxZQUFZO1lBQ2xCLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQztTQUN0QyxFQUFFLEtBQUssQ0FBQyxDQUFBO1FBRVQsTUFBTSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RCxDQUFDLENBQUMsQ0FBQztJQUdILElBQUksQ0FBQyx5Q0FBeUMsRUFBRSxHQUFHLEVBQUU7UUFDbkQsTUFBTSxJQUFJLEdBQUcsZ0JBQU07YUFDaEIsVUFBVSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQzthQUMvQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUNwQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFcEIsK0JBQW1CLENBQUM7WUFDbEIsT0FBTyxFQUFFLEVBQUMsZ0JBQWdCLEVBQUUsSUFBSSxFQUFFO1lBQ2xDLElBQUksRUFBRSxZQUFZO1lBQ2xCLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQztTQUN0QyxFQUFFLEtBQUssQ0FBQyxDQUFBO1FBRVQsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRCxNQUFNLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELENBQUMsQ0FBQyxDQUFDO0FBR0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJwcm9jZXNzLmVudi5USVRPX1RPS0VOX1JGID0gXCJhYmNkMTIzNFwiXG5cbmltcG9ydCB2YWxpZGF0ZVRpdG9QYXlsb2FkIGZyb20gJy4vdmFsaWRhdGUtdGl0by1wYXlsb2FkJ1xuaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuXG5jb25zdCByZXBseSA9IHtcbiAgYmFkUmVxdWVzdDogamVzdC5mbigpLFxuICBub3RBY2NlcHRhYmxlOiBqZXN0LmZuKClcbn1cblxuY29uc3QgcGF5bG9hZE1pc3NpbmdFdmVudCA9IHsgZm9vOiBcImJhclwiIH1cbmNvbnN0IHBheWxvYWRFdmVudCA9IHsgZm9vOiBcImJhclwiLCBldmVudDogeyBzbHVnOiAncmVpbmZvcmNlMjAyMCcgfX1cblxuZGVzY3JpYmUoJ3RpdG8gcGF5bG9hZCB2YWxpZGF0aW9uJywgKCkgPT4ge1xuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIHJlcGx5LmJhZFJlcXVlc3QubW9ja0NsZWFyKClcbiAgICByZXBseS5ub3RBY2NlcHRhYmxlLm1vY2tDbGVhcigpXG4gIH0pO1xuXG4gIHRlc3QoJ3ZhbGlkYXRlIG1pc3NpbmcgZXZlbnQgcGF5bG9hZCcsICgpID0+IHtcbiAgICB2YWxpZGF0ZVRpdG9QYXlsb2FkKHtoZWFkZXJzOiB7J3RpdG8tc2lnbmF0dXJlJzogXCJmb29cIiB9LCBib2R5OiBwYXlsb2FkTWlzc2luZ0V2ZW50IH0sIHJlcGx5KVxuXG4gICAgZXhwZWN0KHJlcGx5LmJhZFJlcXVlc3QpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKTtcbiAgfSk7XG5cbiAgdGVzdCgndmFsaWRhdGUgZXZlbnQgcGF5bG9hZCB3aXRoIGhhc2ggbWlzbWF0Y2gnLCAoKSA9PiB7XG4gICAgdmFsaWRhdGVUaXRvUGF5bG9hZCh7XG4gICAgICBoZWFkZXJzOiB7J3RpdG8tc2lnbmF0dXJlJzogXCJmb29cIiB9LFxuICAgICAgYm9keTogcGF5bG9hZEV2ZW50LFxuICAgICAgcmF3Qm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZEV2ZW50KVxuICAgIH0sIHJlcGx5KVxuXG4gICAgZXhwZWN0KHJlcGx5Lm5vdEFjY2VwdGFibGUpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKTtcbiAgfSk7XG5cblxuICB0ZXN0KCd2YWxpZGF0ZSBldmVudCBwYXlsb2FkIHdpdGggcHJvcGVyIGhhc2gnLCAoKSA9PiB7XG4gICAgY29uc3QgaG1hYyA9IGNyeXB0b1xuICAgICAgLmNyZWF0ZUhtYWMoJ3NoYTI1NicsIHByb2Nlc3MuZW52LlRJVE9fVE9LRU5fUkYpXG4gICAgICAudXBkYXRlKEpTT04uc3RyaW5naWZ5KHBheWxvYWRFdmVudCkpXG4gICAgICAuZGlnZXN0KCdiYXNlNjQnKTtcblxuICAgIHZhbGlkYXRlVGl0b1BheWxvYWQoe1xuICAgICAgaGVhZGVyczogeyd0aXRvLXNpZ25hdHVyZSc6IGhtYWMgfSxcbiAgICAgIGJvZHk6IHBheWxvYWRFdmVudCxcbiAgICAgIHJhd0JvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWRFdmVudClcbiAgICB9LCByZXBseSlcblxuICAgIGV4cGVjdChyZXBseS5iYWRSZXF1ZXN0KS50b0hhdmVCZWVuQ2FsbGVkVGltZXMoMCk7XG4gICAgZXhwZWN0KHJlcGx5Lm5vdEFjY2VwdGFibGUpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygwKTtcbiAgfSk7XG5cblxufSk7XG4iXX0=